---
elements:
  - type: 'Software System'
    name: 'Decentralised Event Store'
    description: 'Serverless, distributed, peer-to-peer database. Stores all application events, that do not need to be pushed into the blockchain.'
    tags: External
    containers:
      - type: Container
        name: 'Access Controller'
        description: 'Verifies Ethereum signature for an event.'
        technology: ""
        tags: External
        position: '2605,355'
      - type: Container
        name: OrbitDB
        description: 'Stores all application events, that do not need to be pushed into the blockchain.'
        technology: ""
        tags: Database
        position: '2605,815'
  - type: 'Software System'
    name: 'District Designer'
    description: 'No-code platform for creating full-featured blockchain applications.'
    tags: Internal
    containers:
      - type: Container
        name: Database
        description: 'Stores all data in indexed format.'
        technology: 'Datomic Cloud'
        tags: Database
        position: '1215,1655'
      - type: Container
        name: 'District Designer Client Side'
        description: 'Web UI for creating, managing and using a district'
        technology: ClojureScript
        tags: WebBrowser
        position: '70,550'
      - type: Container
        name: 'District Designer Server Side'
        description: ""
        technology: 'ClojureScript Node.js'
        tags: ""
        components:
          - type: Component
            name: 'Datalog Endpoint'
            description: 'Serves datalog queries'
            technology: 'ClojureScript Node.js'
            tags: ""
            position: '625,1175'
          - type: Component
            name: 'Event Processor'
            description: 'Validates and processes event data for database insertion'
            technology: 'ClojureScript Node.js'
            tags: ""
            position: '1060,680'
          - type: Component
            name: 'Event Push Endpoint'
            description: 'Endpoint for pushing events into the event store'
            technology: 'ClojureScript Node.js'
            tags: ""
            position: '1060,195'
          - type: Component
            name: Listeners
            description: 'Listens to event store and smart-contracts'
            technology: 'ClojureScript Web3.js OrbitDB'
            tags: ""
            position: '1870,975'
  - type: 'Software System'
    name: Ethereum
    description: 'Distributed computing platform and operating system featuring smart contract functionality.'
    tags: External
    containers:
      - type: Container
        name: 'Smart Contracts'
        description: 'Handles all funds related and other security-critical actions in District Designer system.'
        technology: ""
        tags: External
        position: '2610,1255'
  - type: 'Software System'
    name: 'Other System'
    description: 'Different System leveraging District Designer data and smart-contracts'
    tags: Other
    position: '2945,1765'
relationships:
  - source: 'Access Controller'
    description: 'pushes valid events'
    technology: OrbitDB
    destination: OrbitDB
    tags: ""
  - source: 'Datalog Endpoint'
    description: 'fetches data'
    technology: 'Datomic REST API'
    destination: Database
    tags: ""
  - source: 'District Designer Client Side'
    description: 'makes datalog queries'
    technology: Datalog
    destination: 'Datalog Endpoint'
    tags: ""
  - source: 'District Designer Client Side'
    description: 'pushes events signed with Ethereum wallet and receives responses'
    technology: 'MetaMask, HTTP'
    destination: 'Event Push Endpoint'
    tags: ""
  - source: 'District Designer Client Side'
    description: 'makes transactions'
    technology: MetaMask/Status/...
    destination: 'Smart Contracts'
    tags: ""
    vertices:
      - '1825,1325'
  - source: 'Event Processor'
    description: 'inserts data'
    technology: 'Datomic REST API'
    destination: Database
    tags: ""
  - source: 'Event Push Endpoint'
    description: 'passes event and receives response'
    technology: ClojureScript
    destination: 'Event Processor'
    tags: ""
  - source: 'Event Push Endpoint'
    description: 'passes only valid events'
    technology: ClojureScript
    destination: 'Access Controller'
    tags: ""
  - source: Listeners
    description: 'passes ordered events'
    technology: ClojureScript
    destination: 'Event Processor'
    tags: ""
  - source: OrbitDB
    description: 'pushes events'
    technology: OrbitDB
    destination: Listeners
    tags: ""
  - source: 'Other System'
    description: ""
    technology: ""
    destination: 'Smart Contracts'
    tags: ""
  - source: 'Other System'
    description: ""
    technology: ""
    destination: 'Smart Contracts'
    tags: ""
  - source: 'Other System'
    description: ""
    technology: ""
    destination: OrbitDB
    tags: ""
    vertices:
      - '3150,965'
  - source: 'Other System'
    description: ""
    technology: ""
    destination: 'Access Controller'
    tags: ""
    vertices:
      - '3310,595'
  - source: 'Smart Contracts'
    description: 'pushes events'
    technology: Web3.js
    destination: Listeners
    tags: ""
styles:
  - type: element
    tag: Component
    width: ""
    height: ""
    background: '#85bbf0'
    color: '#000000'
    border: ""
    opacity: ""
    fontSize: ""
    shape: ""
    metadata: ""
    description: ""
  - type: element
    tag: Container
    width: ""
    height: ""
    background: '#438dd5'
    color: ""
    border: ""
    opacity: ""
    fontSize: ""
    shape: ""
    metadata: ""
    description: ""
  - type: element
    tag: Database
    width: ""
    height: ""
    background: ""
    color: ""
    border: ""
    opacity: ""
    fontSize: ""
    shape: Cylinder
    metadata: ""
    description: ""
  - type: element
    tag: Element
    width: ""
    height: ""
    background: ""
    color: '#ffffff'
    border: ""
    opacity: ""
    fontSize: ""
    shape: RoundedBox
    metadata: ""
    description: ""
  - type: element
    tag: Other
    width: ""
    height: ""
    background: '#999999'
    color: ""
    border: ""
    opacity: ""
    fontSize: ""
    shape: ""
    metadata: ""
    description: ""
  - type: element
    tag: Person
    width: ""
    height: ""
    background: '#08427b'
    color: ""
    border: ""
    opacity: ""
    fontSize: ""
    shape: Person
    metadata: ""
    description: ""
  - type: element
    tag: 'Software System'
    width: ""
    height: ""
    background: '#1168bd'
    color: ""
    border: ""
    opacity: ""
    fontSize: ""
    shape: ""
    metadata: ""
    description: ""
  - type: element
    tag: WebBrowser
    width: ""
    height: ""
    background: ""
    color: ""
    border: ""
    opacity: ""
    fontSize: ""
    shape: WebBrowser
    metadata: ""
    description: ""
type: Component
scope: 'District Designer Server Side'
description: 'The component diagram for the District Designer Server Side.'
size: Slide_16_10
